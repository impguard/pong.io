#!/bin/bash

bake_task build "Builds the game in development mode."
function build {
  local env=${1:-development}

  docker build \
    --build-arg NODE_ENV="$env" \
    -f 'build/Dockerfile' \
    -t 'pong:latest' .
  bake_echo_green 'Built the server container!'

  docker run --rm \
    -v "$PWD/dist/client:/game/dist/client" \
    'pong:latest' yarn build:client
  bake_echo_green "Built client files!"
}


bake_task build:prod "Builds the game in production mode."
function build:prod {
  build production
}

bake_task compose "Runs docker compose."
function compose {
  docker-compose -f 'build/docker-compose.yml' "$@"
}


bake_task exec "Execs into the game server."
function exec {
  compose run server "$@"
}


bake_task yarn "Runs yarn in the container."
function yarn {
  compose run server yarn "$@"
}


bake_task run "Runs the game."
function run {
  compose up
}


bake_task run:live "Runs the game with live reloading."
function run:live {
  local id

  if [ ! -d node_modules ]; then
    bake_echo_yellow 'Caching node modules...'

    id=$(docker create --rm --name 'pong-cache' 'pong:latest' true)
    docker cp "$id:/game/node_modules" ./node_modules
    docker rm "$id" 1>/dev/null
  fi

  docker-compose -f 'build/docker-compose.live.yml' up
}
